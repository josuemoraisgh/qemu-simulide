name: mingw-build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Enable long paths in Git
        run: |
          git config --system core.longpaths true
          git config --global core.longpaths true

      - name: Checkout (no submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      - name: Setup MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-python
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-pixman
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-libslirp
            mingw-w64-x86_64-gnutls
            mingw-w64-x86_64-libssh
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-capstone
            make

      - name: Configure (legacy ./configure)
        shell: msys2 {0}
        run: |
          pwd
          ./configure \
            --prefix=$MINGW_PREFIX \
            --target-list=xtensa-softmmu \
            --enable-sdl \
            --enable-slirp \
            --enable-capstone \
            --enable-gnutls \
            --enable-libssh \
            --disable-werror

      - name: Build (make)
        shell: msys2 {0}
        run: |
          make -j$(nproc)

      - name: Install to staging (DESTDIR)
        shell: msys2 {0}
        run: |
          rm -rf dist
          mkdir -p dist
          make install DESTDIR="$(pwd)/dist"

      - name: Package artifact (zip)
        shell: pwsh
        run: |
          if (Test-Path qemu-simulide-windows-mingw64.zip) { Remove-Item qemu-simulide-windows-mingw64.zip }
          Compress-Archive -Path dist\* -DestinationPath qemu-simulide-windows-mingw64.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qemu-simulide-windows-mingw64
          path: qemu-simulide-windows-mingw64.zip
          if-no-files-found: error

      # Diagn√≥stico se o configure/make falhar
      - name: Show config.log on failure
        if: ${{ failure() }}
        shell: pwsh
        run: |
          $log = "config.log"
          if (Test-Path $log) {
            Write-Host "===== config.log ====="
            Get-Content $log -Raw | Write-Output
          } else {
            Write-Host "config.log not found."
