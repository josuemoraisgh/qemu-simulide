name: mingw-build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 0) Habilita long paths no Git do runner ANTES do checkout
      - name: Enable long paths in Git
        run: |
          git config --system core.longpaths true
          git config --global core.longpaths true

      # 1) Checkout SEM submódulos
      - name: Checkout (no submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0

      # 2) Inicialize apenas os submódulos necessários pro build
      #    -> dtc e ui/keycodemapdb são os costumeiros; roms/* e edk2 NÃO são necessários para xtensa
      - name: Init minimal submodules
        shell: bash
        run: |
          git submodule sync -- dtc ui/keycodemapdb || true
          git submodule update --init --depth 1 --jobs 4 dtc ui/keycodemapdb

      # 3) Setup MSYS2 / MinGW-w64
      - name: Setup MSYS2 (MINGW64)
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            git
            base-devel
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-meson
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-python
            mingw-w64-x86_64-glib2
            mingw-w64-x86_64-pixman
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-libslirp
            mingw-w64-x86_64-gnutls
            mingw-w64-x86_64-libssh
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-libjpeg-turbo
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-capstone

      # 4) Configura e compila (somente xtensa-softmmu)
      - name: Configure (Meson)
        shell: msys2 {0}
        run: |
          meson setup build ^
            --prefix=$MINGW_PREFIX ^
            -Doptimization=2 ^
            -Dstrip=false ^
            -Ddefault_targets=false ^
            -Dtargets=xtensa-softmmu ^
            -Dsdl=enabled ^
            -Dslirp=enabled ^
            -Dcapstone=enabled ^
            -Dgnutls=enabled ^
            -Dlibssh=enabled

      - name: Build (Ninja)
        shell: msys2 {0}
        run: ninja -C build

      # 5) Instala em DESTDIR e empacota
      - name: Install to staging (DESTDIR)
        shell: msys2 {0}
        run: |
          rm -rf dist
          mkdir -p dist
          meson install -C build --no-rebuild --destdir dist

      - name: Package artifact (zip)
        shell: bash
        run: |
          cd dist
          7z a ../qemu-simulide-windows-mingw64.zip .
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qemu-simulide-windows-mingw64
          path: qemu-simulide-windows-mingw64.zip
          if-no-files-found: error
